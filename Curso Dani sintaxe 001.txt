

media_amostral<-function(x){

	#numero de elementos
	ne<-length(x)

	#soma dos elementos
	se<-sum(x)

	media<-se/ne
	return(media)
}

mediana_amostral<-function(x){

	#numero de elementos
	ne<-length(x)

	#elementos em ordem crescente
	eod<-x[order(x)]

	#numero impar de elementos?
	if(ne%%2){
		#sim, numero impar de elementos
		mediana<-eod[1+ne%/%2]
		return(mediana)
	}
	else{
		#nao, numero par de elementos
		mediana<-(eod[ne%/%2]+eod[1+ne%/%2])/2
		return(mediana)
	}
}

frequencia_amostral<-function(x){

	#elementos diferentes
	ed<-unique(x)

	#frequencia de cada elemento diferente
	frequencia<-sapply(ed, function(e) sum(x==e))
	names(frequencia)<-ed

	#frequencias em ordem decrescente
	frequencia<-frequencia[order(frequencia, decreasing=T)]
	return(frequencia)
}

moda_amostral<-function(x){

	#frequencias em ordem decrescente
	fed<-frequencia_amostral(x)

	#elementos com maxima frequencia
	moda<-names(fed)[which(fed==fed[1])]
	return(moda)
}

sumario<-function(df)

	#para cada variavel de um dataframe 
	#a funcao calcula as medidas
	#e gera os graficos adequados
	#ao tipo da variavel 
	lapply(df, function(x) 
		#a variavel eh numerica?
		if(is.numeric(x))
			#sim, a variavel eh numerica discreta ou continua
			list(tipo="numerica discreta ou continua",
			     media=media_amostral(x), 
		     	     mediana=mediana_amostral(x), 
		     	     moda=moda_amostral(x),
		     	     frequencia=frequencia_amostral(x))
			
		else
			#nao, a variavel eh nominal ou ordinal
			list(tipo="categorica nominal ou ordinal",
         		     moda=moda_amostral(x),
	     	     	     frequencia=frequencia_amostral(x)))

gerador_de_dados<-function(n){

	#gera uma tabela de dados
	data.frame(nominal=sample(c("camisa",
				    "camiseta",
				    "sapato",
				    "bolsa",
				    "colete"), n, replace=T),
	       	   ordinal=as.factor(sample(1:5, n, replace=T)),
	       	   discreta=sample(1:6, n, replace=T),
	       	   continua=rnorm(n, 0, 1),
		   stringsAsFactors=F)
}

###################################################################

#gera os dados
dados<-gerador_de_dados(1000)
dados

#calcula as medidas
medidas<-sumario(dados)
medidas

###################################################################

#histograma para as variaveis numericas discretas ou continuas
#discreta
h<-hist(dados$discreta, plot=F,
	breaks=union(sort(unique(dados$discreta))
		-min(diff(sort(unique(dados$discreta))))/30,
		sort(unique(dados$discreta))
		+min(diff(sort(unique(dados$discreta))))/30))
h$density = 100*h$counts/sum(h$counts)

dev.new()
plot(h, freq=F,
	main=paste("Histograma de discreta"), 
	xlab="valores", ylab="frequencia relativa (%)", col="red")

#adicionar a media e a mediana ao histograma
abline(v=mean(dados$discreta), col = "black", lwd = 3)
abline(v=median(dados$discreta), col = "black", lwd = 3, lty=3)
legend(x = "topright", bg="white",
 	c("media", "mediana"),
 	col = c("black", "black"),
 	lwd = c(3, 3),
	lty = c(1, 3))

#continua
dev.new()
hist(dados$continua, freq=F,
	main=paste("Histograma de continua"), 
	xlab="valores", ylab="densidade", col="red")

#adicionar a media e a mediana ao histograma
abline(v=mean(dados$continua), col = "black", lwd = 3)
abline(v=median(dados$continua), col = "black", lwd = 3, lty=3)
legend(x = "topright", bg="white",
 	c("media", "mediana"),
 	col = c("black", "black"),
 	lwd = c(3, 3),
	lty = c(1, 3))

#grafico de barras para as variaveis categoricas nominais ou ordinais
#dados de frequencia em medidas
#nominal
dev.new()
barplot(sort(table(dados$nominal)), 
	space=3, horiz=T,
	main="Grafico de barras de nominal", 
  	xlab="frequencia absoluta", ylab="valores", col="red")

#ordinal
freq_rel<-table(dados$ordinal)

dev.new()
barplot(100*freq_rel[order(names(freq_rel))]/sum(freq_rel), 
	space=3, 
	main="Grafico de barras de ordinal", 
  	xlab="valores", ylab="frequencia relativa (%)", col="red")










