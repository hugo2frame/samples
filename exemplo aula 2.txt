

media_amostral<-function(x){
    
    #numero de elementos
    ne<-length(x)
    
    #soma dos elementos
    se<-sum(x)
    
    media<-se/ne
    return(media)
}

mediana_amostral<-function(x){
    
    #numero de elementos
    ne<-length(x)
    
    #elementos em ordem crescente
    eod<-x[order(x)]
    
    #numero impar de elementos?
    if(ne%%2){
        #sim, numero impar de elementos
        mediana<-eod[1+ne%/%2]
        return(mediana)
    }
    else{
        #nao, numero par de elementos
        mediana<-(eod[ne%/%2]+eod[1+ne%/%2])/2
        return(mediana)
    }
}

frequencia_amostral<-function(x){
    
    #elementos diferentes
    ed<-unique(x)
    
    #frequencia de cada elemento diferente
    frequencia<-sapply(ed, function(e) sum(x==e))
    names(frequencia)<-ed
    
    #frequencias em ordem decrescente
    frequencia<-frequencia[order(frequencia, decreasing=T)]
    return(frequencia)
}

moda_amostral<-function(x){
    
    #frequencias em ordem decrescente
    fed<-frequencia_amostral(x)
    
    #elementos com maxima frequencia
    moda<-names(fed)[which(fed==fed[1])]
    return(moda)
}

sumario<-function(df)
    
    #para cada variavel de um dataframe 
    #a funcao calcula as medidas
    #e gera os graficos adequados
    #ao tipo da variavel 
    lapply(df, function(x) 
        #a variavel eh numerica?
        if(is.numeric(x))
            #sim, a variavel eh numerica discreta ou continua
            list(tipo="numerica discreta ou continua",
                 media=media_amostral(x), 
                 mediana=mediana_amostral(x), 
                 moda=moda_amostral(x),
                 frequencia=frequencia_amostral(x))
        
        else
            #nao, a variavel eh nominal ou ordinal
            list(tipo="categorica nominal ou ordinal",
                 moda=moda_amostral(x),
                 frequencia=frequencia_amostral(x)))

gerador_de_dados<-function(n){
    
    #gera uma tabela de dados
    data.frame(nominal=sample(c("camisa",
                                "camiseta",
                                "sapato",
                                "bolsa",
                                "colete"), n, replace=T),
               ordinal=as.factor(sample(1:5, n, replace=T)),
               discreta=sample(1:6, n, replace=T),
               continua=rnorm(n, 0, 1),
               stringsAsFactors=F)
}

#gera os dados
dados<-gerador_de_dados(100)
dados

#calcula as medidas
medidas<-sumario(dados)
medidas


#histograma para as variaveis numericas discretas ou continuas
#discreta
#dev.new()
hist(dados$discreta, freq=F,
     main=paste("Histograma de discreta"), 
     xlab="valores", ylab="densidade", col="red")

#histograma para as variaveis numericas discretas ou continuas
#discreta
dev.new()
hist(dados$discreta, freq=F,
     main=paste("Histograma de discreta"), 
     xlab="valores", ylab="densidade", col="red")

#adicionar a media e a mediana ao histograma
abline(v=medidas$discreta$media, col = "black", lwd = 3)
abline(v=medidas$discreta$mediana, col = "black", lwd = 3, lty=5)
legend(x = "topright", bg="white",
       c("media", "mediana"),
       col = c("black", "black"),
       lwd = c(3, 3),
       lty = c(1, 5))

#continua
dev.new()
hist(dados$continua, freq=F,
     main=paste("Histograma de continua"), 
     xlab="valores", ylab="densidade", col="red")

#adicionar a media e a mediana ao histograma
abline(v=medidas$continua$media, col = "black", lwd = 3)
abline(v=medidas$continua$mediana, col = "black", lwd = 3, lty=5)
legend(x = "topright", bg="white",
       c("media", "mediana"),
       col = c("black", "black"),
       lwd = c(3, 3),
       lty = c(1, 5))

#grafico de barras para as variaveis categoricas nominais ou ordinais
#dados de frequencia em medidas
#ordinal
dev.new()
barplot(medidas$nominal$frequencia, 
        main="Grafico de barras de nominal", 
        xlab="valores", ylab="frequencia absoluta", col="red")

#ordinal
dev.new()
barplot(medidas$ordinal$frequencia[order(names(medidas$ordinal$frequencia))], 
        main="Grafico de barras de ordinal", 
        xlab="valores", ylab="frequencia absoluta", col="red")
